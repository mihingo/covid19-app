{"version":3,"sources":["InfoBox.js","Map.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","title","cases","total","Card","CardContent","Typography","color","className","Map","Table","countries","map","country","App","useState","setCountries","setCountry","countryInfo","setCountryInfo","tableData","setTableData","useEffect","fetch","then","response","json","data","a","name","value","iso2","getCountriesCovidData","onCountryChange","event","countryCode","target","url","FormControl","Select","variant","onChange","MenuItem","todayCases","recovered","todayRecovered","deaths","todayDeaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b70364f0.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nfunction InfoBox({ title, cases, total }) {\n  return (\n    <Card>\n      <CardContent>\n        {/* Title */}\n        <Typography color=\"textSecondary\" className=\"infoBox__title\">\n          {title}\n        </Typography>\n        {/* cases */}\n        <h2 className=\"infoBox__cases\">{cases}</h2>\n        {/* total */}\n        <Typography color=\"textSecondary\" className=\"infoBox__total\">\n          {total} Total\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default InfoBox;\n","import React from \"react\";\n\nfunction Map() {\n  return (\n    <div className=\"map\">\n      <h3>I'm a MAP</h3>\n    </div>\n  );\n}\n\nexport default Map;\n","import React from \"react\";\nimport \"./Table.css\";\n\nfunction Table({ countries }) {\n  return (\n    <div className=\"table\">\n      {countries.map(({ country, cases }) => (\n        <tr>\n          <td>{country}</td>\n          <td>\n            <strong>{cases}</strong>\n          </td>\n        </tr>\n      ))}\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n  useEffect(() => {\n    const getCountriesCovidData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          setCountries(countries);\n          setTableData(data);\n        });\n    };\n    getCountriesCovidData();\n  }, [countries]);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    //\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n      });\n  };\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Covid19 Tracker App</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">WordWide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox\n            title=\"Cases\"\n            total={countryInfo.cases}\n            cases={countryInfo.todayCases}\n          />\n          <InfoBox\n            title=\"Recovered\"\n            total={countryInfo.recovered}\n            cases={countryInfo.todayRecovered}\n          />\n          <InfoBox\n            title=\"Deaths\"\n            total={countryInfo.deaths}\n            cases={countryInfo.todayDeaths}\n          />\n        </div>\n        <Map />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          {/* Table */}\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          {/* Graph */}\n          <h3>Worldwide New Cases</h3>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}